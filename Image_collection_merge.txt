/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var region = 
    /* color: #d63000 */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[-119.29037928529948, 43.487206136557056],
          [-119.29037928529948, 43.007060080432026],
          [-118.41147303529948, 43.007060080432026],
          [-118.41147303529948, 43.487206136557056]]], null, false);
/***** End of imports. If edited, may not auto-convert in the playground. *****/


//=== helper functions =====================================================
var cloudMask = function(image){
  var quality =image.select(['pixel_qa']); 
  // clear = no clouds, cloud shadow, or snow
  var clear = quality.bitwiseAnd(1 << 3).eq(0) // cloud shadow
                .and(quality.bitwiseAnd(1 << 5).eq(0)) // cloud
                .and(quality.bitwiseAnd(1 << 4).eq(0)); // snow
  image = image.mask(clear);
  return image;
};  

var bandRenamel8 = function(image){
  var rename = image.select(['B2', 'B3', 'B4', 'B5', 'B6', 'B7'],
  ['B1', 'B2', 'B3', 'B4', 'B5', 'B7']); // renaming so L8 bands match L7 & L5 bands.  
  return rename; 
};

//============================================================================
//    create imageCollection - filter landsat l5, l7, l8, and merge 
//============================================================================
{
var periodl5 = ee.ImageCollection('LANDSAT/LT05/C01/T1_SR')
    .filterBounds(region) 
    .filter((ee.Filter.date('1984-01-01', '2011-12-31')))
    .map(cloudMask);
// print(periodl5, 'periodl5');

var periodl7 = ee.ImageCollection('LANDSAT/LE07/C01/T1_SR')
    .filterBounds(region)  
    .filter((ee.Filter.date('2012-01-01', '2012-12-31'))) // minimize the use of Landsat 7 when possible (sensor array for this satellite introduces 'no data' or 'bad data' into the image and it's a lot of work to remove those blurry areas)
    .map(cloudMask);
// print(periodl7, 'periodl7');

var periodl8 = ee.ImageCollection('LANDSAT/LC08/C01/T1_SR')
    .filterBounds(region) 
    .filter((ee.Filter.date('2013-01-01', '2020-12-31')))
    .map(cloudMask)
    .map(bandRenamel8);
//print(periodl8, 'periodl8');
}

//============================================================================
//    filter merged collection 
//============================================================================
{
var myCollection = ee.ImageCollection(periodl5.merge(periodl7).merge(periodl8)); 

var myCollection = ee.ImageCollection(myCollection)
  .filterBounds(region) // this is redundant, you don't need to re-filterBounds(region) unless you're adding new/changing regions in this step
  .select(['B1', 'B2', 'B3', 'B4', 'B5', 'B7']) // this is redundant, you don't need to re-select bands unless you're changing/adding new bands into the image. 
  .filter((ee.Filter.date('2010-01-01', '2015-12-31')))
  .filter(ee.Filter.dayOfYear(92,213)); //julian day of year --- look at julian calendar when you write your code for time series analysis. 

print(myCollection, 'myCollection'); 

var median = myCollection.median();
var mean = myCollection.mean();
var count = myCollection.count();


Map.addLayer (median.clip(region), {'min': 670, 'max': 3062, 'bands': ['B4', 'B3', 'B2']}, 'median');

Map.addLayer (mean.clip(region), {'min': 670, 'max': 3062, 'bands': ['B4', 'B3', 'B2']}, 'mean');

Map.addLayer (count.clip(region),{'min':23, 'max':68, 'bands':['B1']}, 'count');
}